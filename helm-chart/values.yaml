# Azure Day 2 Engine - Helm Values
# ================================

# Global configuration
global:
  # Container registry configuration
  registry: "advaks.azurecr.io"
  imageTag: "latest"
  
  # Azure configuration
  azure:
    clientId: "placeholder-client-id"
    tenantId: "placeholder-tenant-id"
    clientSecret: "placeholder-client-secret"
    subscriptionId: "placeholder-subscription-id"
  
  # Authentication configuration
  auth:
    secretKey: "placeholder-secret-key"
    adminUsername: "admin"
    adminPassword: "placeholder-password"
    tokenExpireMinutes: 1440

# Backend configuration
backend:
  # Deployment settings
  replicaCount: 1  # Changed from 2 to 1 as requested
  
  image:
    repository: azure-day2-engine-backend
    tag: ""  # Uses global.imageTag if empty
    pullPolicy: Always
  
  # Service configuration
  service:
    type: LoadBalancer
    port: 80
    targetPort: 8000
  
  # Resource limits
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # Environment variables
  env:
    LOG_LEVEL: "INFO"
    DEBUG: "false"

# Frontend configuration
frontend:
  # Deployment settings
  replicaCount: 1
  
  image:
    repository: azure-day2-engine-frontend
    tag: ""  # Uses global.imageTag if empty
    pullPolicy: Always
  
  # Service configuration
  service:
    type: LoadBalancer
    port: 80
    targetPort: 8501
  
  # Resource limits
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /
      port: 8501
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /
      port: 8501
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # Environment variables
  env:
    API_URL: "http://azure-day2-engine-backend-service"  # Will be updated to external IP after deployment

# Service Account
serviceAccount:
  create: true
  name: "azure-day2-engine"

# ConfigMap for SQL scripts
sqlScripts:
  enabled: true
  scripts:
    sample_health_check.sql: |
      -- Sample health check script for PostgreSQL
      -- This script performs basic health checks on the database
      
      -- Check database version and current time
      SELECT 
          version() as postgresql_version,
          current_timestamp as current_time,
          current_database() as database_name;
      
      -- Check database size
      SELECT 
          pg_database.datname as database_name,
          pg_size_pretty(pg_database_size(pg_database.datname)) as size
      FROM pg_database
      WHERE pg_database.datname = current_database();
      
      -- Check active connections
      SELECT 
          count(*) as active_connections,
          max(max_conn.setting::int) as max_connections,
          round((count(*)::decimal / max(max_conn.setting::int)) * 100, 2) as connection_usage_percent
      FROM pg_stat_activity 
      CROSS JOIN pg_settings max_conn 
      WHERE max_conn.name = 'max_connections'
        AND pg_stat_activity.state = 'active';
      
      -- Check table count in current database
      SELECT 
          schemaname,
          count(*) as table_count
      FROM pg_tables 
      WHERE schemaname NOT IN ('information_schema', 'pg_catalog')
      GROUP BY schemaname
      ORDER BY table_count DESC;
    
    sample_backup_check.sql: |
      -- Sample backup verification script for PostgreSQL
      -- This script checks backup-related information and settings
      
      -- Check current backup settings and last backup information
      SELECT 
          name,
          setting,
          unit,
          short_desc
      FROM pg_settings 
      WHERE name IN (
          'archive_mode',
          'archive_command',
          'wal_level',
          'max_wal_senders',
          'wal_keep_segments'
      )
      ORDER BY name;
      
      -- Check WAL files information
      SELECT 
          count(*) as wal_files_count,
          pg_size_pretty(sum(size)) as total_wal_size
      FROM pg_ls_waldir();
      
      -- Check replication slots if any
      SELECT 
          slot_name,
          slot_type,
          database,
          active,
          restart_lsn,
          confirmed_flush_lsn
      FROM pg_replication_slots;
      
      -- Database statistics for backup planning
      SELECT 
          schemaname,
          n_tup_ins as inserts,
          n_tup_upd as updates,
          n_tup_del as deletes,
          n_live_tup as live_tuples,
          n_dead_tup as dead_tuples,
          last_vacuum,
          last_autovacuum,
          last_analyze,
          last_autoanalyze
      FROM pg_stat_user_tables
      ORDER BY n_live_tup DESC
      LIMIT 10;

# Labels applied to all resources
commonLabels:
  app: azure-day2-engine
  version: "1.0.0"
  managed-by: helm

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Node selector (optional)
nodeSelector: {}

# Tolerations (optional)
tolerations: []

# Affinity rules (optional)
affinity: {}